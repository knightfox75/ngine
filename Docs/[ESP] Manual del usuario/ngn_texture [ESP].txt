NGN_TEXTURE.H
v1.15.0-stable
Español

--------------------------------------------------------------------------------
	MÉTODOS de la clase
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

- Método
NGN_Texture(
	NGN_TextureData* texture, 					// Objeto de la clase TextureData
	int32_t position_x = DEFAULT_VALUE,			// Posición X inicial (oculto por defecto)
	int32_t position_y = DEFAULT_VALUE,			// Posición Y inicial (oculto por defecto)
	uint32_t textura_width = DEFAULT_VALUE,		// Ancho de la Textura (por defecto, el de la textura)
	uint32_t textura_height = DEFAULT_VALUE,	// Altura de la Textura (por defecto, la de la textura)
);

- Descripción
Crea una nueva textura, usando los datos previamente cargados.

- Ejemplo
NGN_Texture* clouds = new NGN_Texture(clouds_gfx, 0, 0);

--------------------------------------------------------------------------------

- Método
NGN_Texture(
	uint32_t texture_width,						// Ancho de la textura
	uint32_t texture_height,					// Altura de la textura
	int32_t position_x = NGN_DEFAULT_VALUE,		// Posicion X inicial (oculto por defecto)
	int32_t position_y = NGN_DEFAULT_VALUE		// Posicion Y inicial (oculto por defecto)
);

- Descripción
Crea una nueva textura en blanco con el tamaño especificado.

- Ejemplo
NGN_Texture* clouds = new NGN_Texture(1280, 720, 0, 0);

--------------------------------------------------------------------------------

- Método
void Position(float position_x, float position_y);
void Position(Vector2 pos);

- Descripción
Posiciona la textura en la coordenada dada.

- Ejemplo
clouds->Position(1200, 900);

--------------------------------------------------------------------------------

- Método
void Translate(float speed_x, float speed_y);
void Translate(Vector2 spd);

- Descripción
Mueve la textura en la dirección y velocidades dadas.

- Ejemplo
clouds->Translate(5.0f, 0.0f);

--------------------------------------------------------------------------------

- Método
void Size(float w, float h);

- Descripción
Cambia el tamaño de la textura.

- Ejemplo
clouds->Size(64, 48);

--------------------------------------------------------------------------------

- Método
void Scale(float w, float h);
void Scale(float scale);

- Descripción
Escala la textura, según el factor dado. Según la sobrecarga usada, escalará los ejes en conjunto o por separado.
La escala por defecto es 1.0f.

- Ejemplo
clouds->Scale(1.5f);
clouds->Scale(2.0f, 0.75f);

--------------------------------------------------------------------------------

- Método
void Rotate(double degrees);

- Descripción
Rota la textura el número de grados proporcionados.

- Ejemplo
clouds->Rotate(1.2f);

--------------------------------------------------------------------------------

- Método
void SetCenter(float x, float y);

- Descripción
Especifica, en coordenadas relativas y desde el centro real de la textura, donde se ubicará el centro de rotación de la textura.

- Ejemplo
clouds->SetCenter(-10, -5);

--------------------------------------------------------------------------------

- Método
void ClearContent (uint32_t rgba = 0x00000000);

- Descripción
Borra el contenido de una textura, si esta se ha creado en blanco.
Si no es especifica un color de relleno en formato RGBA, esta se borra aplicando el color transparente.

- Ejemplo
clouds->ClearContent();

--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
	PROPIEDADES de la clase
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

- Propiedad
Vector2 position
Vector2 screen

- Descripción
Posición de la textura (global o en pantalla).

--------------------------------------------------------------------------------

- Propiedad
float width
float height

- Descripción
Tamaño de la textura.

--------------------------------------------------------------------------------

- Propiedad
bool visible

- Descripción
Establece la visibilidad de la textura.

--------------------------------------------------------------------------------

- Propiedad
int32_t alpha

- Descripción
Nivel de transparencia de la textura, entre 0 y 255.

--------------------------------------------------------------------------------

- Propiedad
SDL_BlendMode blend_mode

- Descripción
Modo de mezcla de color de la textura. Los modos disponibles son:
NGN_BLENDMODE_NONE, NGN_BLENDMODE_ALPHA, NGN_BLENDMODE_ADDITIVE y NGN_BLENDMODE_MODULATE.
El valor por defecto de esta propiedad es NGN_BLENDMODE_ALPHA.

--------------------------------------------------------------------------------

- Propiedad
double rotation

- Descripción
Rotación de la textura, en grados.

--------------------------------------------------------------------------------

- Propiedad
bool flip_h
bool flip_v

- Descripción
Volteado vertical y horizontal de la textura.

--------------------------------------------------------------------------------
