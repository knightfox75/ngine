--------------------------------------------------------------------------------
N'gine Changelog
--------------------------------------------------------------------------------

2020-06-22 Ver.0.12.0-a
--------------------------------------------------------------------------------
- Ahora se detecta el cambio de foco/cambio de modo de pantalla para forzar
  el redibujado de la escena.
- Añadidos los métodos SendToFront() y SendToBack() a la clase "NGN_Camera", 
  los cuales envían un sprite al frente o al fondo su capa respectivamente.
- Optimizado el algoritmo de render de los fondos de tiles. Tambien se ha
  cambiado la rutina de carga de estos archivos.
- Añadido el método SetMode() a la clase "NGN_Graphics", el cual nos permite
  cambiar el tamaño y modo de la ventana entre ventana x1, x2, x3, x4, ventana
  completa o pantalla completa, a tiempo real y sin reiniciar el programa. Por
  contra, desaparece el uso de la variable full_screen para estos cambios.
- Añadido el método GetDesktopResolution(); a la clase "NGN_Graphics", el cual
  devuelve la resolución del escritorio.
- Se añade el ejemplo de uso del método SetMode().
- La librería LodePNG se actualiza a la versión 20200306.
- Los binarios de la librería se compilan con la versión de SDL2 2.0.12.
- Templates actualizados.


2020-03-18 Ver.0.11.0-a
--------------------------------------------------------------------------------
- Ajustes en el algoritmo de cálculo del efecto "panning" de los efectos
  sonido, para un mejor equilibrio de volumen.
- Añadida la funcionalidad de "rumble" para los controladores que lo soporten.
- Optimizada la lectura del estado de las teclas.
- Añadido el método para el clonado de Sprites en la clase "NGN_Graphics".
- Añadido la propiedad de modo de mezcla de color (blending) a las clases
  "NGN_Canvas", "NGN_Sprite", "NGN_TextLayer", "NGN_Texture" y "NGN_TiledBg".
  Esta propiedad puede tener los valores NGN_BLENDMODE_NONE,
  NGN_BLENDMODE_ALPHA, NGN_BLENDMODE_ADDITIVE y NGN_BLENDMODE_MODULATE,
  estableciéndose por defecto el valor NGN_BLENDMODE_ALPHA.
- Se ha actualizado la documentación y los ejemplos.


2019-12-29 Ver.0.10.0-a
--------------------------------------------------------------------------------
- Añadida la propiedad "box_enabled" a la clase "NGN_Sprite", la cual permite
  habilitar o deshabilitar la caja de colisión principal.
- Ahora los Sprites pueden disponer de colisionadores adicionales.
- Añadidos los métodos "AddCollider", "GetColliderId", "ColliderEnabled" y
  "RemoveCollider" a la clase "NGN_Sprite".
- Se ha actualizado la documentación.
- Añadido el ejemplo para el uso de múltiples colisionadores en los sprites.
- Ajustes menores en el algoritmo de detección de colisiones por cajas.
- N'gine recompilado con la versión 2.0.10 de SDL2.
- N'gine para Linux Mint actualizado a la versión 17.3 TRICIA.


2019-09-04 Ver.0.9.1-a
--------------------------------------------------------------------------------
- Documentación actualizada con la nueva URL del sitio oficial.


2019-06-18 Ver.0.9.0-a
--------------------------------------------------------------------------------
- Añadida la clase "NGN_ToolBox" a la librería, la cual contiene herramientas
  genéricas de ayuda a la programación.
- Añadido el método "Int2String" a la clase "NGN_ToolBox", el cual convierte
  un numero entero a cadena de texto con formato.
- Añadido el método "Float2String" a la clase "NGN_ToolBox", el cual convierte
  un numero decimal a cadena de texto con formato.
- Añadido el método "GetDistance" a la clase "NGN_ToolBox", el cual devuelve
  la distancia entre 2 puntos (4 sobrecargas).
- Añadidas las constantes "NGN_VERSION_MAJOR", "NGN_VERSION_MINOR",
  "NGN_VERSION_PATCH" y "NGN_VERSION_METADATA", las cuales indican la versión
  de N'gine.
- Añadido el método "GetVersion" en la clase "NGN_System", el cual devuelve
  un string con la versión actual de N'gine.
- Actualizados los templates de N'gine para code::blocks, mostrando ahora en
  la consola la versión de N'gine si se ejecutan en modo "debug".
- Actualizados los templates de N'gine para code::blocks, declarando el
  define "MODE_DEBUG" cuando se selecciona este.
- Actualizados todos los ejemplos del uso de las funciones de N'gine.
- Actualizada la librería para el uso de SDL2 2.0.9, SDL2_TTF 2.0.15,
  SFML 2.5.1 y LodePNG 20190615.


2019-03-28 Ver.0.8.0-a
--------------------------------------------------------------------------------
- Actualizada la documentación del usuario.
- Añadida la sobrecarga al constructor de la clase NGN_Texture para la creación
  de texturas en blanco.
- Añadido el método ClearContent(); a la clase NGN_Texture para borrar el
  contenido de una textura, si esta se ha creado en blanco.
- Añadido el método RenderToTexture(NGN_Texture* texture); en la clase
  NGN_Render para fijar una textura como destino del render.
- Añadido el método RenderToScreen(); en la clase NGN_Render para fijar
  el surface por defecto como destino del render.
- Añadidas las sobrecargas de los métodos PushSprite(); RemoveSprite();
  ChangeLayer(); de la clase NGN_Camera para poder registrar texturas
  como sprites en la cámara 2D.
- Añadida la posibilidad de crear animaciones de los sprites con orden
  decreciente en los frames (animación inversa).
- Corregido un bug en la inicialización de los viewports.


2019-03-04 Ver.0.7.0-a
--------------------------------------------------------------------------------
- Corregido un BUG en la lectura del POV de los controladores si ningún
  controlador estaba conectado, dando falsos positivos en la lectura.
- Reescrita en su totalidad la rutina de detección de los controladores,
  conservando ahora su ID aun que se desconecte un controlador con ID inferior.
- Cambiados los tipos de dato de algunos parámetros en las clases NGN_Camera,
  NGN_Canvas, NGN_Sprite, NGN_TextLayer y NGN_Texture y su documentación.
- Modificadas algunas definiciones de parámetros internos de N'gine, pasando a
  usar el método "static const" en vez de "#define".
- Añadida la opción de la creación y render hacia diferentes viewports
  seleccionables, mediante los métodos OpenViewport();  CloseViewport();
  SelectViewport(); ViewportPosition(); DefaultViewport(); en la clase
  NGN_Graphics y del método render->Viewports(); en la clase NGN_Render;
- Internamente se genera un ID de frame en tiempo de ejecución, de este modo
  es posible evitar que varias llamadas a PlayAnimation(); aceleren la
  animación de los sprites.
- Eliminadas temporalmente las opciones de "overscan" de los fodos de tiles
  debido a su incompatibilidad con el sistema de "viewports" y su bajo
  rendimiento en general.
- Añadido el ejemplo para el uso de múltiples viewports.


2018-07-09 Ver.0.6.1-a
--------------------------------------------------------------------------------
- Incorporados los archivos DLL necesarios para las utilidades de la librería
  en su versión para Windows.
- Añadida la sobrecarga al método NGN_Sound::OpenMusic() que nos permite
  escoger los puntos de entrada y salida del LOOP.
- Añadido el ejemplo de loop de música cambiando los puntos de loop.


2018-05-31 Ver.0.6.0-a
--------------------------------------------------------------------------------
  [Windows]
- Binarios de la librería compilados para el uso de SDL2 2.0.8.
- Binarios de la librería compilados para el uso de SFML 2.5.0.
- Binarios de la librería compilados usando MinGW-windows-gcc-7.3.0.
- Documentación de instalación actualizada.
  [General]
- Binarios de la librería compilados para entornos x64.
- Templates actualizados para su compilación en 64bits.
- Ejemplos compilados a 64 bits.


2018-05-07 Ver.0.5.3-a
--------------------------------------------------------------------------------
- Añadida la posibilidad de cambiar el centro de la caja de colisión de los
  sprites mediante el uso de un offset.
- Actualizada la documentación de la clase NGN_Sprite.
- Añadido el flag "animation_pause" a la clase NGN_Camera, el cual pausa la
  animación de todos los sprites si está en TRUE.
- Cambios menores en la estructura de la clase "NGN_Camera".
- Cambio en la estructura interna de NGN_Sprite y NGN_SpriteData, almacenando
  ahora cada fotograma en una textura independiente, lo cual soluciona el 
  problema del límite de altura del sprite sheet de 8192 pixeles. Ahora cada
  fotograma puede tener un tamaño máximo de 8192x8192 pixeles. Esto no afecta
  al formato interno de los archivos .SPR y no es necesario reconvertirlos ni
  realizar ningún cambio en los proyectos existentes.
- Corregido el bug en el método NGN_Load::Sprite(); el cual reservaba más
  memoria de la requerida al cargar el sprite sheet.
- Añadido el ejemplo para el uso del hitbox ajustable de los Sprites.


2018-03-22 Ver.0.5.2-a
--------------------------------------------------------------------------------
- Actualizados los templates para auto-detectar el sistema operativo de destino
  y así poder adaptar el método óptimo para el cambio del modo de pantalla.
- Añadido el include a la librería "cstdint" para asegurar el uso de tipos de
  dato intxx_t de C++ 11.
- Corregido un BUG en el template de "Menu", el cual no eliminaba los datos del
  cursor al destruir el objeto.
- Añadido el soporte a gamepad en el template "Menu".
- Al crear una capa de texto, se ejecuta automaticamente el comando Cls(); para
  aplicar la textura de fondo de manera automática.

  
2018-02-03 Ver.0.5.1-a
--------------------------------------------------------------------------------
- Corregido un error en la detección de la relación de aspecto de la pantalla
  en el modo "SCR_WINDOW_FULL".


2018-02-02 Ver.0.5.0-a
--------------------------------------------------------------------------------
- Actualizados los templates de la librería.
- Ahora se deshabilita el protector de pantalla de forma automática al
  iniciarse.
- Se ha modificado el orden de los parámetros del método NGN_Graphics::Init();
  para mayor facilidad de uso.
- La opción VSYNC se deshabilita de manera automática si el refresco del
  monitor es inferior a 60hz;
- Se ha reescrito el método para el cambio de modo de pantalla, pudiendo
  escoger ahora entre modo ventana, ventana a pantalla completa y
  pantalla completa. Esto evita el dibujado de elementos fuera de lugar
  en modo pantalla completa en algunas tarjetas gráficas. Se recomienda el
  uso de modo "SCR_WINDOW_FULL" (modo ventana completa) en Linux.
- El parámetro window_name en el método NGN_Graphics::Init(); es ahora del
  tipo string y se almacena en la propiedad window_caption;
- Añadido el método NGN_Graphics::SetViewportClip(); el cual permite definir
  el área visible de la pantalla.
- Añadido el método NGN_Graphics::ShowMouse() para mostrar y ocultar el
  cursor del ratón cuando estamos en el foco de la aplicación.



2018-01-17 Ver.0.4.4-a
--------------------------------------------------------------------------------
- Modificado el método CloseMusic(); de la clase NGN_Sound para que, en caso
  de que un stream de musica sin loop finalice, no se produzca un error de
  protección en runtime si se intenta cerrar el mismo.



2018-01-17 Ver.0.4.3-a
--------------------------------------------------------------------------------
- Actualizado el template de la librería y los ejemplos para que incorporen un
  icono al archivo ejecutable de Windows que se genere. 
- Añadido un nuevo template para la creación de aplicaciones con pantallas de
  inicio y menú.
- Añadida la función StopAll(); a la clase SOUND, la cual detiene todos los
  SFX activos y cierra todos los streams de música abiertos.

  

2018-01-10 Ver.0.4.2-a
--------------------------------------------------------------------------------
- Corregido un bug en el método Cls() de la clase TEXT_LAYER el cual causaba
  que no se borrara el contenido de la capa de texto si el color de fondo tenia
  un valor de alpha igual a 0.
  (Gracias a David Bassaganya por el aviso)


  
2017-12-19 Ver.0.4.1-a
--------------------------------------------------------------------------------
- Añadidas el resto de teclas pendientes del teclado (US) a la clase INPUT.
- Detectado un bug de SDL2 en Linux que causaba que las texturas generadas no
  realizasen correctamente la transparencia al ser rellenadas por primera vez.
  Esto causaba que en las capas de texto donde se usaba una imagen de fondo,
  esta no se mostrara correctamente después del comando CLS en Linux, en
  Windows por contra, funcionaba sin problemas. Se ha solucionado realizando
  un doble borrado de la textura con los colores 0xFFFFFFFF y 0x00000000 antes
  de aplicar la imagen de fondo a la textura.



2017-11-14 Ver.0.4.0-a
--------------------------------------------------------------------------------
- Añadidas las funciones de colisión entre Sprites por "Pixel Perfect".
- Añadidas las sobrecargas para poder usar el tipo de dato "Vector2" en la
  mayoría de funciones de desplazamiento y de posicionamiento.
  (Translate() y Position())



2017-11-14 Ver.0.3.0-a
--------------------------------------------------------------------------------
- Compilación de los binarios de N'gine para Windows usando las nuevas
  versiones de las librerías SDL y SFML (SDL 2.0.7 y SFML 2.4.2).
- Pequeñas correcciones en los textos informativos de la utilidad "PNG to 
  Collision Map converter".
- Cambio del formato de color en la función NGN_TextLayer::CanvasColor()
  de ARGB a RGBA.
- Cambio de la definición DEFAULT_VALUE de (1 << 31) a 0x7FFFFFFF.
- Cambios menores de la detección de parámetros en la función
  NGN_Graphics::Init(), adaptándola al nuevo DEFAULT_VALUE.
- Cambios menores en la clase NGN_Camera, adaptándola al nuevo
  DEFAULT_VALUE.
- Añadidas las primeras funciones de Canvas.
- Añadidas funciones internas para la limpieza de los buffers en su
  proceso de creación.
- Añadidos los ejemplos de Canvas y pequeñas correcciones en el ejemplo
  de uso de la cámara.



2017-10-24 Ver.0.2.0-a
--------------------------------------------------------------------------------
- Cambio del formato de pixel en los mapas de colisión de ABGR a RGBA.
- Cambio del sistema de almacenamiento en archivo y en RAM del mapa de
  colisiones, usando tiles para comprimir la información del mismo.
- Optimización del contador de progreso en las utilidades.
- Optimización de la detección de argumentos en las utilidades.
- Optimización de la generación de nombres de archivo en las utilidades.
- Actualizado el ejemplo de uso de los mapas de colisión.



2017-10-04 Ver.0.1.0-a
--------------------------------------------------------------------------------
- Primera pre-release en estado Alpha.


